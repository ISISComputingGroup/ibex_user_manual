Scripting
=========

Scripting in IBEX is done using genie\_python. The [genie\_python
reference manual]
(http://shadow.nd.rl.ac.uk/genie_python/sphinx/genie_python.html ) gives
a full account of what functions are available in genie\_python. This
page is intended to give a broad guide to scripting for the beginner and
novice user.

-  `Running ``genie_python`` commands`_
-  `Common ``genie_python`` commands`_
-  `Converting Open Genie to ``genie_python```_
-  `Creating and running instrument scripts`_
-  `Creating and running user scripts`_
-  `Tips from the developers`_

Running genie\_python commands
==============================

When running ``genie_python`` from an interactive console such as from
the GUI or after running ``C:\Instrument\Apps\Python\genie_python.bat``,
the ``genie`` module will be aliased to ``g``. Genie commands can then
be accessed by using the prefix ``g.[COMMAND_NAME]``. For example:

::

    g.start()
    g.cset("BLOCK_1",1)
    g.abort()

This is particularly useful from the GUI which will auto-complete
commands and provide tool tips describing each function and its
arguments.

Note that in many cases, arguments will be optional. For instance,
``begin`` can be used as ``g.begin()`` despite supporting all of the
arguments ``period``, ``meas_id``, ``meas_type``, ``meas_subid``,
``sample_id``, ``delayed``, ``quiet``, ``paused``, and ``verbose``.

Common genie\_python commands
=============================

Many ``genie_python`` commands share the same name with their Open Genie
equivalent so it will often be very straightforward to find the function
you’re looking for. Still, here is a list of the most commonly used
``genie_python`` commands. This is **not a complete list**. For full
information, consult the [genie\_python reference manual] (
http://shadow.nd.rl.ac.uk/genie_python/sphinx/genie_python.html ).

Starting and stopping a run
---------------------------

+-----------+----------------------------------------------------+--------------+
| Command   | Description                                        | Example      |
+===========+====================================================+==============+
| begin     | Starts a new run                                   | g.begin()    |
+-----------+----------------------------------------------------+--------------+
| end       | Ends the current run                               | g.end()      |
+-----------+----------------------------------------------------+--------------+
| abort     | Aborts the current run                             | g.abort()    |
+-----------+----------------------------------------------------+--------------+
| pause     | Pauses the current run                             | g.pause()    |
+-----------+----------------------------------------------------+--------------+
| resume    | Resumes the current run after it has been paused   | g.resume()   |
+-----------+----------------------------------------------------+--------------+

Updating blocks and PVs
-----------------------

+-----------+--------------------------------------------------+------------------------+
| Command   | Description                                      | Example                |
+===========+==================================================+========================+
| cget      | Gets the useful values associated with a block   | g.cget(“NEW\_BLOCK”)   |
+-----------+--------------------------------------------------+------------------------+

.. _Running ``genie_python`` commands: #running-genie_python-commands
.. _Common ``genie_python`` commands: #common-genie_python-commands
.. _Converting Open Genie to ``genie_python``: #converting-open-genie-to-genie_python
.. _Creating and running instrument scripts: #creating-and-running-instrument-scripts
.. _Creating and running user scripts: #creating-and-running-user-scripts
.. _Tips from the developers: #tips-from-the-developers