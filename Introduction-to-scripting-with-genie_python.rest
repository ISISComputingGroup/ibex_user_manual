Contents
========

Starting a scripting session
============================

The best way to run ``genie_python`` commands is from the scripting perspective of the Ibex client.

To open a scripting window:

1. Start the Ibex client
2. Open the scripting perspective

::
    IMAGE: OpenTheScriptingPerspective

3. From here, you can start entering Python code. It will be executed line by line as you enter it.

**Exercise 1**
--------------
- Open a scripting window in Ibex
- Output "Hello, world!" to the console
- Calculate and output the square of all the integers between 1 and 10

You can also open a scripting terminal by running ``C:\Instrument\Apps\Python\genie_python.bat``. This will not provide some advanced features such as auto-complete though, and is recommended for advanced users only.

Accessing ``genie_python`` commands
===================================

Where Ibex has been installed correctly on your machine, ``genie_python`` commands can be accessed via the ``g`` namespace. Try entering ``g.get_version()``.

You should have noticed when you typed ``g.`` that an autocomplete window appeared:

::
    IMAGE: AutoCompleteWindowBasic

The window lists the available commands, and the arguments they take in brackets. You also notice that a description of the highlighted functions and its arguments is also given.

Instrument control
------------------

Instrument control commands let you switch between experimental states. The most common commands are:

- ``g.begin()``
- ``g.pause()``
- ``g.resume()``
- ``g.end()``
- ``g.abort()``

You can also update and store results using:

- ``g.update()``
- ``g.store()``
- ``g.updatestore()`` (does both an update and a store)

Blocks
------

Run control
-----------

Experiment setup
----------------


Creating and running scripts
============================

Instrument scripts
------------------

Create
~~~~~~

Run
~~~

User scripts
------------

Create
~~~~~~

Run
~~~

Open Genie: Compare and contrast
================================

Commands
--------

Arguments
---------

Procedures vs. functions
------------------------

Loops
-----

Exercise notes
==============

Exercise 1
----------
- Open a scripting window in Ibex
    - Should be straightforward if Ibex is correctly installed.
    - Ideally the instrument will appear as ``SETUP``
    - The output when the scripting window opens should look a bit like this:
::
    IMAGE: StandardStartupOutputOnDemo
- Output "Hello, world!" to the console
    - Enter something like ``print "Hello, World!`` and press return
- Calculate and output the square of all the integers between 1 and 10
    - This is best achieved with the following loop:
::
    for i in range(1,11):
        print i*i

    - A **blank line** will indicate to the scripting window that you've finished writing the loop and it can go ahead and execute it