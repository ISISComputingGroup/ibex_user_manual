.. MuonFEScriptGuidance:

Guidance on Writing Scripts for the Muon Front-End
===================================================

This page contains guidance on writing scripts for the Muon Front-End control PC (NDEMUONFE).  The information on this page is specific to NDEMUONFE and is not relevant to other control PCs.

Contents
---------

#. `Starting & Stopping Runs Remotely`_
#. `Using Blocks to Write Tuning Control Scripts`_
#. `How to Switch between Access Gateway Setups`_
#. `How to Re-apply Settings`_

Starting & Stopping Runs Remotely
---------------------------------

The relevant code can be found in the github repository:

https://github.com/ISISComputingGroup/mfe_control_scripts

The code is written in Python and relies on the win32com module. Please ensure this is installed before running.

There is a file, run_interactively.py, which can be used to interactively trigger commands on multiple machines. It is currently set up to run on the 3 MFE instrument PCs. You can adjust it by changing the list of machine names in the variable MACHINES. To run just launch the script with Python.

Note that the script relies on the host machine and user having sufficient DCOM permissions to talk to the three instrument machines. At time of writing, there remains some issue here. In the past, establishing a remote desktop connection with the instrument machine has been sufficient to establish the underlying permissions but this no longer appears to be the case.

To write your own scripts, use the MultipleDaeController class in Python to issue commands to multiple machines simultaneously. The script run_interactively.py provides a good example of how to use it.

Insert documentation explaining how to start/stop runs on each instrument remotely.

::

    from multiple_dae_controller import MultipleDaeController
    controller = MultipleDaeController()
    try:
        for m in ["NDXHIFI","NDXMUSR","NDXEMU"]:
            controller.add_machine(m, WAITFOR_TIMEOUT_SECONDS)

Return to `Contents`_.

Using Blocks to Write Tuning Control Scripts
--------------------------------------------

Insert documentation explaining how to access the blocks on ``IN:MUONFE`` to write the tuning control scripts via Mantid/Genie Python.

::

   Provide some handy sample code by replacing this text.

Return to `Contents`_.

How to Switch between Access Gateway Setups
-------------------------------------------

Insert documentation detailing the methods to switch between access gateway setups.

::

   Provide some handy sample code by replacing this text.

Return to `Contents`_.

How to Re-apply Settings
------------------------

IOCs controlling Power Supply Units have the option to re-apply their set-points (current, voltage, status on/off) the next time they are restarted.

To do this, the relevant configuration must be setup in the following way:

#. Open the Edit Configuration dialog (by selecting ``Configurations > Edit`` from the ``Configuration`` menu).
#. In the ``IOCs`` tab, locate the correct IOC and make sure both the ``Auto-start?`` and ``Auto-restart?`` boxes for the IOC are checked.
#. In the ``IOC Macros`` tab, select the correct IOC and set the macro ``SP_AT_STARTUP`` to ``YES`` (default is ``NO``).

The set-points can be re-applied by reloading the current configuration (which will restart the IOCs), with the following genie_python command:

::

   reload_current_config()

Note that the set-points can also be re-applied by restarting the IOCs individually in the IBEX GUI (as long as the ``SP_AT_STARTUP`` macro is set as above).

Return to `Contents`_.
