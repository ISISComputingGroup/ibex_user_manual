Introduction
============

Welcome to this introductory course on ``genie_python``, a Python module that enables instrument control using Genie commands with Python. Once you have completed this course, you will be able to do the following using ``genie_python``

- Start and stop runs
- Get and set block information
- Update experiment details
- Create specialised instrument and user scripts scripts
- Convert ``OpenGENIE`` scripts to ``genie_python``

At each stage the course aims to assist learning with exercises and worked examples.

If you're looking for specific answers, please refer to the course contents below. Otherwise, let's `get started`__!

__ GettingStarted_

Contents
========

We expect that most people will take this course in a linear fashion, but if you have a specific query, the course is broadly split up into the following topics

- Getting started
- Common ``genie_python`` commands
- Scripting
- Converting between ``OpenGENIE`` and ``genie_python``







Open Genie: Compare and contrast
================================

Commands
--------

Arguments
---------

Procedures vs. functions
------------------------

Loops
-----

Exercise notes
==============

Exercise 1
----------
- Open a scripting window in Ibex
    - Should be straightforward if Ibex is correctly installed.
    - Ideally the instrument will appear as ``SETUP``
    - The output when the scripting window opens should look a bit like this:

::
    IMAGE: StandardStartupOutputOnDemo

- Output "Hello, world!" to the console
    - Enter something like ``print "Hello, World!`` and press return
- Calculate and output the square of all the integers between 1 and 10
    - This is best achieved with the following loop:

::
    for i in range(1,11):
        print i*i

    - A **blank line** will indicate to the scripting window that you've finished writing the loop and it can go ahead and execute it